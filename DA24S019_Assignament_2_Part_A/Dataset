import os
from torchvision.datasets import INaturalist
from torchvision import transforms
from torch.utils.data import DataLoader
import pytorch_lightning as pl

class INaturalistDataModule(pl.LightningDataModule):
    def __init__(self, data_dir='./data', batch_size=32, num_workers=4, image_size=224):
        super().__init__()
        self.data_dir = data_dir
        self.batch_size = batch_size
        self.num_workers = num_workers
        self.image_size = image_size

        self.transform = transforms.Compose([
            transforms.Resize((self.image_size, self.image_size)),
            transforms.ToTensor()
        ])

    def prepare_data(self):
        # Downloads dataset if needed
        INaturalist(self.data_dir, version='2021_train', download=True)

    def setup(self, stage=None):
        self.train_dataset = INaturalist(self.data_dir, version='2021_train', transform=self.transform)

    def train_dataloader(self):
        return DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers)

